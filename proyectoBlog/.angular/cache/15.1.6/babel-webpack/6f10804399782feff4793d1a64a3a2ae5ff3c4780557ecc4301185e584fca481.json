{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Swal from 'sweetalert2';\nlet ProjectsComponent = class ProjectsComponent {\n  constructor(projectService, changeDetectorRef, activatedRoute) {\n    this.projectService = projectService;\n    this.changeDetectorRef = changeDetectorRef;\n    this.activatedRoute = activatedRoute;\n    this.role = JSON.parse(localStorage.getItem('role'));\n  }\n  ngOnInit() {\n    this.projectSubscribe = this.projectService.getProjects().pipe().subscribe(projects => {\n      this.projects = projects;\n    });\n  }\n  delete(project) {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    });\n    swalWithBootstrapButtons.fire({\n      title: '多Estas seguro?',\n      text: `多Seguro que deseas eliminar al cliente ${project.description} ?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Eliminar',\n      cancelButtonText: 'Cancelar',\n      reverseButtons: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.projectService.delete(project.id).subscribe(response => {\n          this.projects = this.projects.filter(cli => cli !== project);\n          swalWithBootstrapButtons.fire('Project eliminado', `Project ${project.description} eliminado con exito`, 'success');\n        });\n      }\n    });\n  }\n};\nProjectsComponent = __decorate([Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})], ProjectsComponent);\nexport { ProjectsComponent };","map":{"version":3,"mappings":";AAAA,SAA4BA,SAAS,QAAgB,eAAe;AAIpE,OAAOC,IAAI,MAAM,aAAa;AAQvB,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAQ5BC,YAAoBC,cAA8B,EAAUC,iBAAoC,EACtFC,cAA8B;IADpB,mBAAc,GAAdF,cAAc;IAA0B,sBAAiB,GAAjBC,iBAAiB;IACnE,mBAAc,GAAdC,cAAc;IAPd,SAAI,GAAQC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC;EAQ/D;EAEAC,QAAQ;IACN,IAAI,CAACC,gBAAgB,GACrB,IAAI,CAACR,cAAc,CAACS,WAAW,EAAE,CAACC,IAAI,EAAE,CACvCC,SAAS,CACPC,QAAQ,IAAI;MACX,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CACF;EACH;EAEAC,MAAM,CAACC,OAAgB;IACrB,MAAMC,wBAAwB,GAAGlB,IAAI,CAACmB,KAAK,CAAC;MAC1CC,WAAW,EAAE;QACXC,aAAa,EAAE,iBAAiB;QAChCC,YAAY,EAAE;OACf;MACDC,cAAc,EAAE;KACjB,CAAC;IAEFL,wBAAwB,CAACM,IAAI,CAAC;MAC5BC,KAAK,EAAE,gBAAgB;MACvBC,IAAI,EAAE,0CAA0CT,OAAO,CAACU,WAAW,IAAI;MACvEC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE,UAAU;MAC7BC,gBAAgB,EAAE,UAAU;MAC5BC,cAAc,EAAE;KACjB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtB,IAAI,CAAChC,cAAc,CAACa,MAAM,CAACC,OAAO,CAACmB,EAAE,CAAC,CAACtB,SAAS,CAC9CuB,QAAQ,IAAG;UACT,IAAI,CAACtB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACuB,MAAM,CAClCC,GAAG,IAAIA,GAAG,KAAKtB,OAAO,CACvB;UACDC,wBAAwB,CAACM,IAAI,CAC3B,mBAAmB,EACnB,WAAWP,OAAO,CAACU,WAAW,sBAAsB,EACpD,SAAS,CACV;QACH,CAAC,CACF;;IAEL,CAAC,CAAC;EACJ;CAED;AAzDY1B,iBAAiB,eAL7BF,SAAS,CAAC;EACTyC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWzC,iBAAiB,CAyD7B;SAzDYA,iBAAiB","names":["Component","Swal","ProjectsComponent","constructor","projectService","changeDetectorRef","activatedRoute","JSON","parse","localStorage","getItem","ngOnInit","projectSubscribe","getProjects","pipe","subscribe","projects","delete","project","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","description","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","id","response","filter","cli","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\a895589\\curso_angular\\proyectoBlog\\src\\app\\projects\\projects.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Project } from './project';\nimport { Subscription } from 'rxjs';\nimport { ProjectService } from './project.service';\nimport Swal from 'sweetalert2';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  protected role: any = JSON.parse(localStorage.getItem('role')!);\n\n  projects!: Project[];\n  paginador: any;\n  projectSubscribe: Subscription;\n   \n  constructor(private projectService: ProjectService, private changeDetectorRef: ChangeDetectorRef,\n    private activatedRoute: ActivatedRoute){ \n  }\n\n  ngOnInit(): void {\n    this.projectSubscribe =\n    this.projectService.getProjects().pipe()\n    .subscribe(\n      (projects) => {\n        this.projects = projects\n      }\n    );\n  }\n\n  delete(project: Project) {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n    \n    swalWithBootstrapButtons.fire({\n      title: '多Estas seguro?',\n      text: `多Seguro que deseas eliminar al cliente ${project.description} ?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Eliminar',\n      cancelButtonText: 'Cancelar',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.projectService.delete(project.id).subscribe(\n          response => {\n            this.projects = this.projects.filter (\n              cli => cli !== project\n            )\n            swalWithBootstrapButtons.fire(\n              'Project eliminado',\n              `Project ${project.description} eliminado con exito`,\n              'success'\n            )\n          }\n        )\n      }\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}