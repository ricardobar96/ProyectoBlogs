{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ArticleService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.urlEndpoint = 'http://localhost:8080/api/v1/articles';\n    this.httpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n  getArticles() {\n    return this.http.get(this.urlEndpoint).pipe(map(response => {\n      let articles = response;\n      return articles.map(article => {\n        return article;\n      });\n    }));\n  }\n  create(article) {\n    return this.http.post(this.urlEndpoint, article, {\n      headers: this.httpHeaders\n    }).pipe(map(response => response.article), catchError(e => {\n      if (e.status == 400) {\n        return throwError(e);\n      }\n      Swal.fire('Error al crear article', 'No ha sido posible insertar el article en la base de datos', 'error');\n      return throwError(e);\n    }));\n  }\n  getArticle(id) {\n    return this.http.get(`${this.urlEndpoint}/${id}`).pipe(catchError(e => {\n      this.router.navigate(['/articles']);\n      Swal.fire('Error al editar', 'No existe el article en la base de datos', 'error');\n      return throwError(e);\n    }));\n  }\n  update(article) {\n    return this.http.put(`${this.urlEndpoint}/${article.id}`, article, {\n      headers: this.httpHeaders\n    }).pipe(catchError(e => {\n      if (e.status == 400) {\n        return throwError(e);\n      }\n      Swal.fire('Error al editar article', 'No ha sido posible editar el article en la base de datos', 'error');\n      return throwError(e);\n    }));\n  }\n  delete(id) {\n    return this.http.delete(`${this.urlEndpoint}/${id}`, {\n      headers: this.httpHeaders\n    }).pipe(catchError(e => {\n      Swal.fire('Error al eliminar article', 'No ha sido eliminar el article de la base de datos', 'error');\n      return throwError(e);\n    }));\n  }\n}\nArticleService.ɵfac = function ArticleService_Factory(t) {\n  return new (t || ArticleService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nArticleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ArticleService,\n  factory: ArticleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","throwError","map","catchError","Swal","ArticleService","constructor","http","router","getArticles","get","urlEndpoint","pipe","response","articles","article","create","post","headers","httpHeaders","e","status","fire","getArticle","id","navigate","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\a895589\\curso_angular\\proyectoBlog\\src\\app\\articles\\article.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { of, Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Article } from './article';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n\n  private urlEndpoint: string = 'http://localhost:8080/api/v1/articles';\n\n  private httpHeaders = new HttpHeaders({'Content-Type': 'application/json'})\n  constructor(private  http: HttpClient, private router: Router) { }\n\n  getArticles(): Observable<Article[]> {\n    return this.http.get<Article[]>(this.urlEndpoint).pipe(\n      map( response => {\n        let articles = response as Article[];\n        return articles.map(article => {\n          return article;\n        });\n      }\n      ))\n  }\n\n  create(article: Article) : Observable<Article> {\n    return this.http.post<Article>(this.urlEndpoint, article, {headers: this.httpHeaders}).pipe(\n      map((response: any) => response.article as Article),\n      catchError(e => {\n\n        if(e.status == 400) {\n          return throwError(e);\n        }\n\n        Swal.fire('Error al crear article', 'No ha sido posible insertar el article en la base de datos', 'error');\n        return throwError(e);\n      })\n    ); \n  }\n\n  getArticle(id: any): Observable<Article> {\n    return this.http.get<Article>(`${this.urlEndpoint}/${id}`).pipe(\n      catchError(e => {\n        this.router.navigate(['/articles']);\n        Swal.fire('Error al editar', 'No existe el article en la base de datos', 'error');\n        return throwError(e);\n      })\n    );\n  }\n\n  update(article: Article): Observable<Article> {\n    return this.http.put<Article>(`${this.urlEndpoint}/${article.id}`, article, {headers: this.httpHeaders}).pipe(\n      catchError(e => {\n\n        if(e.status == 400) {\n          return throwError(e);\n        }\n        \n        Swal.fire('Error al editar article', 'No ha sido posible editar el article en la base de datos', 'error');\n        return throwError(e);\n      })\n    ); \n  }\n\n  delete(id: any): Observable<Article> {\n    return this.http.delete<Article>(`${this.urlEndpoint}/${id}`, {headers: this.httpHeaders}).pipe(\n      catchError(e => {\n        Swal.fire('Error al eliminar article', 'No ha sido eliminar el article de la base de datos', 'error');\n        return throwError(e);\n      })\n    ); \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}