{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class UserService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.urlEndpoint = 'http://localhost:8080/api/v1/users';\n    this.httpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n  getUsers(page) {\n    return this.http.get(this.urlEndpoint + \"/page/\" + page).pipe(map(response => {\n      response.content.map(user => {\n        return user;\n      });\n      return response;\n    }));\n  }\n  getUsersAll() {\n    return this.http.get(this.urlEndpoint).pipe(map(response => {\n      let users = response;\n      return users.map(user => {\n        return user;\n      });\n    }));\n  }\n  create(user) {\n    return this.http.post(this.urlEndpoint, user, {\n      headers: this.httpHeaders\n    }).pipe(map(response => response.user), catchError(e => {\n      if (e.status == 400) {\n        return throwError(e);\n      }\n      Swal.fire('Error al crear user', 'No ha sido posible insertar el user en la base de datos', 'error');\n      return throwError(e);\n    }));\n  }\n  getUser(id) {\n    return this.http.get(`${this.urlEndpoint}/${id}`).pipe(catchError(e => {\n      this.router.navigate(['/users']);\n      Swal.fire('Error al editar', 'No existe el user en la base de datos', 'error');\n      return throwError(e);\n    }));\n  }\n  update(user) {\n    return this.http.put(`${this.urlEndpoint}/${user.id}`, user, {\n      headers: this.httpHeaders\n    }).pipe(catchError(e => {\n      if (e.status == 400) {\n        return throwError(e);\n      }\n      Swal.fire('Error al editar user', 'No ha sido posible editar el user en la base de datos', 'error');\n      return throwError(e);\n    }));\n  }\n  delete(id) {\n    return this.http.delete(`${this.urlEndpoint}/${id}`, {\n      headers: this.httpHeaders\n    }).pipe(catchError(e => {\n      Swal.fire('Error al eliminar user', 'No ha sido eliminar el user de la base de datos', 'error');\n      return throwError(e);\n    }));\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","throwError","map","catchError","Swal","UserService","constructor","http","router","getUsers","page","get","urlEndpoint","pipe","response","content","user","getUsersAll","users","create","post","headers","httpHeaders","e","status","fire","getUser","id","navigate","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\a895589\\curso_angular\\proyectoBlog\\src\\app\\users\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { of, Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { User } from './user';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private urlEndpoint: string = 'http://localhost:8080/api/v1/users';\n\n  private httpHeaders = new HttpHeaders({'Content-Type': 'application/json'})\n  constructor(private  http: HttpClient, private router: Router) { }\n\n  getUsers(page:number): Observable<any> {\n    return this.http.get(this.urlEndpoint + \"/page/\" + page).pipe(\n      map( (response:any) => {\n        (response.content as User[]).map(user => {\n          return user;\n        });\n        return response;\n      }\n      ))\n  }\n\n  getUsersAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.urlEndpoint).pipe(\n      map( response => {\n        let users = response as User[];\n        return users.map(user => {\n          return user;\n        });\n      }\n      ))\n  }\n\n  create(user: User) : Observable<User> {\n    return this.http.post<User>(this.urlEndpoint, user, {headers: this.httpHeaders}).pipe(\n      map((response: any) => response.user as User),\n      catchError(e => {\n\n        if(e.status == 400) {\n          return throwError(e);\n        }\n\n        Swal.fire('Error al crear user', 'No ha sido posible insertar el user en la base de datos', 'error');\n        return throwError(e);\n      })\n    ); \n  }\n\n  getUser(id: any): Observable<User> {\n    return this.http.get<User>(`${this.urlEndpoint}/${id}`).pipe(\n      catchError(e => {\n        this.router.navigate(['/users']);\n        Swal.fire('Error al editar', 'No existe el user en la base de datos', 'error');\n        return throwError(e);\n      })\n    );\n  }\n\n  update(user: User): Observable<User> {\n    return this.http.put<User>(`${this.urlEndpoint}/${user.id}`, user, {headers: this.httpHeaders}).pipe(\n      catchError(e => {\n\n        if(e.status == 400) {\n          return throwError(e);\n        }\n        \n        Swal.fire('Error al editar user', 'No ha sido posible editar el user en la base de datos', 'error');\n        return throwError(e);\n      })\n    ); \n  }\n\n  delete(id: any): Observable<User> {\n    return this.http.delete<User>(`${this.urlEndpoint}/${id}`, {headers: this.httpHeaders}).pipe(\n      catchError(e => {\n        Swal.fire('Error al eliminar user', 'No ha sido eliminar el user de la base de datos', 'error');\n        return throwError(e);\n      })\n    ); \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}