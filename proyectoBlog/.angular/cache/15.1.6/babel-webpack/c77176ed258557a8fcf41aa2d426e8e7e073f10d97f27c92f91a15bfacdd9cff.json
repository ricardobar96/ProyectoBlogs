{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction FormLoginComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormLoginComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Username too short (min = 6) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormLoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, FormLoginComponent_div_10_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, FormLoginComponent_div_10_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fields[\"username\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.fields[\"username\"].errors[\"required\"] && ctx_r0.fields[\"username\"].errors[\"minlength\"]);\n  }\n}\nfunction FormLoginComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormLoginComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password too short (min = 8) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormLoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, FormLoginComponent_div_15_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, FormLoginComponent_div_15_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fields[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.fields[\"password\"].errors[\"required\"] && ctx_r1.fields[\"password\"].errors[\"minlength\"]);\n  }\n}\nfunction FormLoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \"User not valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class FormLoginComponent {\n  constructor(formBuilder, auth, router) {\n    this.formBuilder = formBuilder;\n    this.auth = auth;\n    this.router = router;\n    this.close = new EventEmitter();\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(6)]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  get fields() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    if (this.auth.login(this.fields['username'].value, this.fields['password'].value)) {\n      this.router.navigate(['/users']);\n    }\n  }\n  cancel() {\n    this.close.emit(true);\n  }\n}\nFormLoginComponent.ɵfac = function FormLoginComponent_Factory(t) {\n  return new (t || FormLoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nFormLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormLoginComponent,\n  selectors: [[\"app-form-login\"]],\n  outputs: {\n    close: \"close\"\n  },\n  decls: 20,\n  vars: 10,\n  consts: [[1, \"card\", \"3-m\"], [1, \"card-header\"], [1, \"card\", \"body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-5\", \"mb-3\", \"mx-3\"], [1, \"form-label\", \"mt-3\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"col-5\", \"mb-3\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"text-center\", \"mb-3\"], [1, \"btn\", \"btn-primary\", \"me-2\", \"col-10\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"alert\", \"alert-danger\"]],\n  template: function FormLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function FormLoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵtemplate(10, FormLoginComponent_div_10_Template, 3, 2, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵtemplate(15, FormLoginComponent_div_15_Template, 3, 2, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, FormLoginComponent_div_16_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementStart(17, \"div\", 12)(18, \"button\", 13);\n      i0.ɵɵtext(19, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.submitted && ctx.fields[\"username\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.fields[\"username\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.fields[\"password\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.fields[\"password\"].errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAwB,eAAe;AACvE,SAAiCC,UAAU,QAAQ,gBAAgB;;;;;;;;ICgB3CC,2BAAmD;IAC/CA,sCACJ;IAAAA,iBAAM;;;;;IACNA,2BAKC;IACDA,8CACA;IAAAA,iBAAM;;;;;IAdVA,+BAGC;IACGA,2EAEM;IACNA,2EAOM;IACVA,iBAAM;;;;IAXIA,eAA2C;IAA3CA,mEAA2C;IAIhDA,eAIxB;IAJwBA,qHAIxB;;;;;IAiBuBA,2BAAmD;IAC/CA,sCACJ;IAAAA,iBAAM;;;;;IACNA,2BAKC;IACDA,8CACA;IAAAA,iBAAM;;;;;IAdVA,+BAGC;IACGA,2EAEM;IACNA,2EAOM;IACVA,iBAAM;;;;IAXIA,eAA2C;IAA3CA,mEAA2C;IAIhDA,eAIxB;IAJwBA,qHAIxB;;;;;IAMWA,+BAAkD;IAAAA,8BAAc;IAAAA,iBAAM;;;;;;;;AD9ClF,OAAM,MAAOC,kBAAkB;EAO7BC,YACUC,WAAwB,EACxBC,IAAiB,EACjBC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,SAAI,GAAJC,IAAI;IACJ,WAAM,GAANC,MAAM;IARhB,UAAK,GAAG,IAAIP,YAAY,EAAW;IAGnC,cAAS,GAAG,KAAK;EAMd;EAEHQ,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEA,IAAIE,MAAM;IACR,OAAO,IAAI,CAACN,SAAS,CAACO,QAAQ;EAChC;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACT,SAAS,CAACU,OAAO,EAAE;MAC1B;;IAGF,IACE,IAAI,CAACb,IAAI,CAACc,KAAK,CACb,IAAI,CAACL,MAAM,CAAC,UAAU,CAAC,CAACM,KAAK,EAC7B,IAAI,CAACN,MAAM,CAAC,UAAU,CAAC,CAACM,KAAK,CAC9B,EACD;MACA,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;EAEpC;EAEAC,MAAM;IACJ,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;EACvB;;AA1CWtB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAuB;EAAAC;IAAAH;EAAA;EAAAI;EAAAC;EAAAC;EAAAC;IAAA;MCV/B7B,8BAAsB;MACMA,qBAAK;MAAAA,iBAAK;MAClCA,8BAAuB;MACWA;QAAA,OAAY8B,cAAU;MAAA,EAAC;MACjD9B,8BAAiB;MAEsBA,wBAAQ;MAAAA,iBAAQ;MAC/CA,2BAKE;MACFA,qEAeM;MACVA,iBAAM;MACNA,+BAAwB;MACWA,yBAAQ;MAAAA,iBAAQ;MAC/CA,6BAKE;MACFA,qEAeM;MACVA,iBAAM;MAEVA,sEAAsE;MACtEA,gCAA8B;MACkBA,sBAAK;MAAAA,iBAAS;;;MAvD5DA,eAAuB;MAAvBA,yCAAuB;MAQbA,eAAmE;MAAnEA,oGAAmE;MAGlEA,eAA4C;MAA5CA,qEAA4C;MAsB7CA,eAAmE;MAAnEA,oGAAmE;MAGlEA,eAA4C;MAA5CA,qEAA4C;MAiBnDA,eAAe;MAAfA,oCAAe","names":["EventEmitter","Validators","i0","FormLoginComponent","constructor","formBuilder","auth","router","ngOnInit","loginForm","group","username","required","minLength","password","fields","controls","onSubmit","submitted","invalid","login","value","navigate","cancel","close","emit","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\a895589\\curso_angular\\proyectoBlog\\src\\app\\form-login\\form-login.component.ts","C:\\Users\\a895589\\curso_angular\\proyectoBlog\\src\\app\\form-login\\form-login.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-form-login',\n  templateUrl: './form-login.component.html',\n  styleUrls: ['./form-login.component.css']\n})\nexport class FormLoginComponent implements OnInit {\n  @Output()\n  close = new EventEmitter<boolean>();\n\n  loginForm:FormGroup;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(6)]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n\n  get fields() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    if (\n      this.auth.login(\n        this.fields['username'].value,\n        this.fields['password'].value\n      )\n    ) {\n      this.router.navigate(['/users']);\n    }\n  }\n\n  cancel() {\n    this.close.emit(true);\n  }\n}\n","<div class=\"card 3-m\">\n    <h5 class=\"card-header\">Login</h5>\n    <div class=\"card body\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-5 mb-3 mx-3\">\n                    <label class=\"form-label mt-3\">Username</label>\n                    <input\n                        type=\"text\"\n                        formControlName=\"username\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && fields['username'].errors}\"\n                    />\n                    <div\n                        *ngIf=\"submitted && fields['username'].errors\" \n                        class=\"invalid-feedback\"\n                    >\n                        <div *ngIf=\"fields['username'].errors['required']\">\n                            Username is required\n                        </div>\n                        <div\n                        *ngIf=\"\n                            !fields['username'].errors['required'] &&\n                            fields['username'].errors['minlength']\n                        \" \n                        >\n                        Username too short (min = 6)\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-5 mb-3\">\n                    <label class=\"form-label mt-3\">Password</label>\n                    <input\n                        type=\"password\"\n                        formControlName=\"password\"\n                        class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && fields['password'].errors}\"\n                    />\n                    <div\n                        *ngIf=\"submitted && fields['password'].errors\" \n                        class=\"invalid-feedback\"\n                    >\n                        <div *ngIf=\"fields['password'].errors['required']\">\n                            Password is required\n                        </div>\n                        <div\n                        *ngIf=\"\n                            !fields['password'].errors['required'] &&\n                            fields['password'].errors['minlength']\n                        \" \n                        >\n                        Password too short (min = 8)\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"submitted\" class=\"alert alert-danger\">User not valid</div>\n            <div class=\"text-center mb-3\">\n                <button class=\"btn btn-primary me-2 col-10\">Login</button>\n                <!--\n                <button class=\"btn btn-primary me-2\" type=\"button\" (click)=\"cancel()\">\n                    Cancel\n                </button>\n                -->\n            </div>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}